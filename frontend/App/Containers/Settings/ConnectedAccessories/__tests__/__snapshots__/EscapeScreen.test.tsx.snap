// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EscapeScreen renders screen 1`] = `
<View
  style={
    {
      "backgroundColor": "rgba(27, 27, 27, 1)",
      "flex": 1,
    }
  }
>
  <View
    style={
      [
        {
          "backgroundColor": "rgba(27, 27, 27, 1)",
          "borderBottomLeftRadius": 24,
          "borderBottomRightRadius": 24,
          "elevation": 12,
          "shadowColor": "rgba(0, 0, 0, 1)",
          "shadowOffset": {
            "height": 4,
            "width": 4,
          },
          "shadowOpacity": 0.2,
          "shadowRadius": 12,
          "zIndex": 1,
        },
        {
          "paddingTop": 0,
        },
      ]
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "flexDirection": "row",
          "height": 60,
          "justifyContent": "center",
          "marginHorizontal": 24,
        }
      }
    >
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={20}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          [
            {
              "opacity": 1,
            },
            {
              "left": 0,
              "padding": 10,
              "position": "absolute",
            },
          ]
        }
      >
        <SvgMock />
      </View>
      <View
        style={
          {
            "alignItems": "center",
            "marginHorizontal": 48,
          }
        }
      >
        <Text
          numberOfLines={1}
          style={
            {
              "color": "rgba(255, 255, 255, 1)",
              "fontFamily": "RobotoCondensed-Medium",
              "fontSize": 20,
              "fontWeight": "500",
              "lineHeight": 32,
            }
          }
        >
          Escape Screen
        </Text>
      </View>
    </View>
  </View>
  <RCTScrollView
    style={
      {
        "paddingHorizontal": 16,
        "paddingVertical": 12,
      }
    }
  >
    <View>
      <View
        style={
          [
            {
              "borderColor": "rgba(54, 54, 54, 1)",
              "borderRadius": 8,
              "borderWidth": 1,
              "marginVertical": 12,
              "paddingBottom": 6,
              "paddingHorizontal": 8,
              "paddingTop": 12,
              "position": "relative",
            },
            undefined,
            undefined,
          ]
        }
      >
        <View
          style={
            [
              {
                "paddingHorizontal": 12,
                "paddingVertical": 15,
              },
              undefined,
            ]
          }
        >
          <View
            style={
              [
                {
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                },
                undefined,
              ]
            }
          >
            <View
              style={
                [
                  {
                    "flex": 1,
                    "justifyContent": "center",
                  },
                  undefined,
                ]
              }
            >
              <Text
                ellipsizeMode="tail"
                numberOfLines={1}
                style={
                  [
                    {
                      "color": "rgba(255, 255, 255, 0.87)",
                      "fontFamily": "Roboto-Medium",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 24,
                      "maxWidth": 210,
                    },
                    undefined,
                  ]
                }
              >
                Model
              </Text>
            </View>
            <View
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                  },
                  false,
                ]
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  [
                    {
                      "opacity": 1,
                    },
                    undefined,
                  ]
                }
              >
                <Text
                  ellipsizeMode="clip"
                  numberOfLines={1}
                  style={
                    [
                      {
                        "color": "rgba(255, 255, 255, 0.87)",
                        "fontFamily": "Roboto-Medium",
                        "fontSize": 16,
                        "fontWeight": "400",
                        "lineHeight": 24,
                        "maxWidth": 210,
                      },
                      {
                        "color": "rgba(147, 147, 147, 1)",
                      },
                    ]
                  }
                >
                  Escape Screen
                </Text>
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            [
              {
                "paddingHorizontal": 12,
                "paddingVertical": 15,
              },
              undefined,
            ]
          }
        >
          <View
            style={
              [
                {
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                },
                undefined,
              ]
            }
          >
            <View
              style={
                [
                  {
                    "flex": 1,
                    "justifyContent": "center",
                  },
                  undefined,
                ]
              }
            >
              <Text
                ellipsizeMode="tail"
                numberOfLines={1}
                style={
                  [
                    {
                      "color": "rgba(255, 255, 255, 0.87)",
                      "fontFamily": "Roboto-Medium",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 24,
                      "maxWidth": 210,
                    },
                    undefined,
                  ]
                }
              >
                Firmware Version
              </Text>
              <Text
                ellipsizeMode="tail"
                numberOfLines={1}
                style={
                  [
                    {
                      "color": "rgba(147, 147, 147, 1)",
                      "fontFamily": "Roboto-Medium",
                      "fontSize": 14,
                      "fontWeight": "400",
                      "lineHeight": 20,
                    },
                    undefined,
                    undefined,
                  ]
                }
              >
                Updated by Yeti.
              </Text>
            </View>
            <View
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                  },
                  {
                    "alignItems": "flex-start",
                  },
                ]
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  [
                    {
                      "opacity": 1,
                    },
                    undefined,
                  ]
                }
              >
                <Text
                  ellipsizeMode="clip"
                  numberOfLines={1}
                  style={
                    [
                      {
                        "color": "rgba(255, 255, 255, 0.87)",
                        "fontFamily": "Roboto-Medium",
                        "fontSize": 16,
                        "fontWeight": "400",
                        "lineHeight": 24,
                        "maxWidth": 210,
                      },
                      {
                        "color": "rgba(147, 147, 147, 1)",
                      },
                    ]
                  }
                >
                  Version undefined
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          [
            {
              "borderRadius": 16,
              "elevation": 2,
              "marginBottom": 8,
              "shadowColor": "rgba(0, 0, 0, 0.4)",
              "shadowOffset": {
                "height": 4,
                "width": 0,
              },
              "shadowOpacity": 0.7,
              "shadowRadius": 7,
            },
            undefined,
            undefined,
          ]
        }
      >
        <View
          style={
            [
              {
                "borderRadius": 16,
                "marginHorizontal": 1,
                "overflow": "hidden",
                "paddingTop": 1,
                "position": "relative",
              },
              undefined,
              undefined,
            ]
          }
        >
          <RNSVGSvgView
            bbHeight="100%"
            bbWidth="100%"
            focusable={false}
            height="100%"
            style={
              [
                {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "flex": 0,
                  "height": "100%",
                  "width": "100%",
                },
              ]
            }
            width="100%"
          >
            <RNSVGGroup
              fill={
                {
                  "payload": 4278190080,
                  "type": 0,
                }
              }
            >
              <RNSVGDefs>
                <RNSVGLinearGradient
                  gradient={
                    [
                      0,
                      -13224394,
                      1,
                      1776411,
                    ]
                  }
                  gradientTransform={null}
                  gradientUnits={0}
                  name="grad"
                  x1="0"
                  x2="0"
                  y1="0"
                  y2="0.5"
                />
              </RNSVGDefs>
              <RNSVGRect
                fill={
                  {
                    "brushRef": "grad",
                    "type": 1,
                  }
                }
                height="100%"
                propList={
                  [
                    "fill",
                  ]
                }
                width="100%"
                x="0"
                y="0"
              />
            </RNSVGGroup>
          </RNSVGSvgView>
          <View
            style={
              [
                {
                  "backgroundColor": "rgba(27, 27, 27, 1)",
                  "borderRadius": 16,
                  "paddingHorizontal": 12,
                  "paddingVertical": 15,
                },
                {
                  "marginBottom": 4,
                },
                undefined,
                undefined,
              ]
            }
          >
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                [
                  {
                    "opacity": 1,
                  },
                  [
                    {
                      "zIndex": 1000,
                    },
                    undefined,
                    undefined,
                  ],
                ]
              }
              testID="withPressable"
            >
              <View
                style={
                  [
                    {
                      "flexDirection": "row",
                      "justifyContent": "space-between",
                    },
                    undefined,
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "flex": 1,
                        "justifyContent": "center",
                      },
                      undefined,
                    ]
                  }
                >
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      [
                        {
                          "color": "rgba(255, 255, 255, 0.87)",
                          "fontFamily": "Roboto-Medium",
                          "fontSize": 16,
                          "fontWeight": "400",
                          "lineHeight": 24,
                          "maxWidth": 210,
                        },
                        undefined,
                      ]
                    }
                  >
                    Power+ Input Limit
                  </Text>
                </View>
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                      },
                      false,
                    ]
                  }
                >
                  <View
                    accessibilityState={
                      {
                        "busy": undefined,
                        "checked": undefined,
                        "disabled": undefined,
                        "expanded": undefined,
                        "selected": undefined,
                      }
                    }
                    accessibilityValue={
                      {
                        "max": undefined,
                        "min": undefined,
                        "now": undefined,
                        "text": undefined,
                      }
                    }
                    accessible={true}
                    collapsable={false}
                    focusable={true}
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      [
                        {
                          "opacity": 1,
                        },
                        undefined,
                      ]
                    }
                  >
                    <Text
                      ellipsizeMode="clip"
                      numberOfLines={1}
                      style={
                        [
                          {
                            "color": "rgba(255, 255, 255, 0.87)",
                            "fontFamily": "Roboto-Medium",
                            "fontSize": 16,
                            "fontWeight": "400",
                            "lineHeight": 24,
                            "maxWidth": 210,
                          },
                          undefined,
                        ]
                      }
                    >
                      undefined amps
                    </Text>
                  </View>
                  <SvgMock
                    style={
                      [
                        {
                          "marginLeft": 16,
                        },
                        undefined,
                      ]
                    }
                  />
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          [
            {
              "borderRadius": 16,
              "elevation": 2,
              "marginBottom": 8,
              "shadowColor": "rgba(0, 0, 0, 0.4)",
              "shadowOffset": {
                "height": 4,
                "width": 0,
              },
              "shadowOpacity": 0.7,
              "shadowRadius": 7,
            },
            undefined,
            undefined,
          ]
        }
      >
        <View
          style={
            [
              {
                "borderRadius": 16,
                "marginHorizontal": 1,
                "overflow": "hidden",
                "paddingTop": 1,
                "position": "relative",
              },
              undefined,
              undefined,
            ]
          }
        >
          <RNSVGSvgView
            bbHeight="100%"
            bbWidth="100%"
            focusable={false}
            height="100%"
            style={
              [
                {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "flex": 0,
                  "height": "100%",
                  "width": "100%",
                },
              ]
            }
            width="100%"
          >
            <RNSVGGroup
              fill={
                {
                  "payload": 4278190080,
                  "type": 0,
                }
              }
            >
              <RNSVGDefs>
                <RNSVGLinearGradient
                  gradient={
                    [
                      0,
                      -13224394,
                      1,
                      1776411,
                    ]
                  }
                  gradientTransform={null}
                  gradientUnits={0}
                  name="grad"
                  x1="0"
                  x2="0"
                  y1="0"
                  y2="0.5"
                />
              </RNSVGDefs>
              <RNSVGRect
                fill={
                  {
                    "brushRef": "grad",
                    "type": 1,
                  }
                }
                height="100%"
                propList={
                  [
                    "fill",
                  ]
                }
                width="100%"
                x="0"
                y="0"
              />
            </RNSVGGroup>
          </RNSVGSvgView>
          <View
            style={
              [
                {
                  "backgroundColor": "rgba(27, 27, 27, 1)",
                  "borderRadius": 16,
                  "paddingHorizontal": 12,
                  "paddingVertical": 15,
                },
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <Text
              style={
                {
                  "color": "rgba(255, 255, 255, 0.87)",
                  "fontFamily": "Roboto-Medium",
                  "fontSize": 16,
                  "fontWeight": "400",
                  "lineHeight": 24,
                }
              }
            >
              <Text
                style={
                  {
                    "color": "rgba(191, 210, 43, 1)",
                  }
                }
              >
                0
                %
              </Text>
               - Brightness
            </Text>
            <View
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                }
              }
            >
              <SvgMock />
              <View
                style={
                  [
                    {
                      "flex": 1,
                      "flexDirection": "row",
                      "position": "relative",
                    },
                    undefined,
                  ]
                }
              >
                <View
                  style={
                    {
                      "flex": 1,
                    }
                  }
                >
                  <View
                    onLayout={[Function]}
                    testID="styledRangeSlider"
                  >
                    <View
                      onLayout={[Function]}
                      style={
                        [
                          {
                            "alignItems": "flex-start",
                          },
                          {
                            "top": 0,
                          },
                        ]
                      }
                    />
                    <View
                      onLayout={[Function]}
                      style={
                        {
                          "alignItems": "center",
                          "flexDirection": "row",
                          "justifyContent": "flex-start",
                        }
                      }
                    >
                      <View
                        style={
                          [
                            {
                              "alignItems": "center",
                              "bottom": 0,
                              "flexDirection": "row",
                              "left": 0,
                              "position": "absolute",
                              "right": 0,
                              "top": 0,
                            },
                            {
                              "marginHorizontal": 0,
                            },
                          ]
                        }
                      >
                        <View
                          style={
                            [
                              {
                                "backgroundColor": "rgba(191, 210, 43, 1)",
                                "borderRadius": 18,
                                "height": 3,
                                "overflow": "hidden",
                              },
                              {
                                "backgroundColor": "rgba(54, 54, 54, 1)",
                              },
                              {
                                "width": "100%",
                              },
                            ]
                          }
                        />
                        <View
                          collapsable={false}
                          style={
                            {
                              "left": 0,
                              "position": "absolute",
                              "right": 0,
                            }
                          }
                        >
                          <View
                            style={
                              [
                                {
                                  "backgroundColor": "rgba(191, 210, 43, 1)",
                                  "borderRadius": 18,
                                  "height": 3,
                                  "overflow": "hidden",
                                },
                                {
                                  "backgroundColor": "rgba(191, 210, 43, 1)",
                                },
                                {
                                  "width": "100%",
                                },
                              ]
                            }
                          />
                        </View>
                      </View>
                      <View
                        collapsable={false}
                        onLayout={[Function]}
                        style={
                          {
                            "transform": [
                              {
                                "translateX": 0,
                              },
                            ],
                          }
                        }
                      >
                        <View
                          style={
                            [
                              {
                                "borderRadius": 14,
                                "borderWidth": 1,
                                "height": 24,
                                "width": 24,
                              },
                              {
                                "backgroundColor": "rgba(191, 210, 43, 1)",
                                "borderColor": "rgba(191, 210, 43, 1)",
                              },
                            ]
                          }
                        />
                      </View>
                      <View
                        collapsable={false}
                        onMoveShouldSetResponder={[Function]}
                        onMoveShouldSetResponderCapture={[Function]}
                        onResponderEnd={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderReject={[Function]}
                        onResponderRelease={[Function]}
                        onResponderStart={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        onStartShouldSetResponderCapture={[Function]}
                        style={
                          {
                            "bottom": 0,
                            "left": 0,
                            "position": "absolute",
                            "right": 0,
                            "top": 0,
                          }
                        }
                      />
                    </View>
                  </View>
                </View>
              </View>
              <SvgMock />
            </View>
          </View>
        </View>
      </View>
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          [
            {
              "borderColor": "rgba(54, 54, 54, 1)",
              "borderRadius": 8,
              "borderWidth": 1,
              "paddingHorizontal": 12,
              "paddingVertical": 16,
              "position": "relative",
            },
            {
              "marginTop": 12,
            },
          ]
        }
        testID="customDropdownPress"
      >
        <View
          style={
            {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "space-between",
            }
          }
        >
          <Text
            style={
              {
                "color": "rgba(255, 255, 255, 0.87)",
                "fontFamily": "Roboto-Medium",
                "fontSize": 14,
                "fontWeight": "400",
                "lineHeight": 20,
              }
            }
          >
            Never
          </Text>
          <SvgMock />
        </View>
        <Text
          style={
            {
              "backgroundColor": "rgba(27, 27, 27, 1)",
              "color": "rgba(191, 210, 43, 1)",
              "fontFamily": "Roboto-Medium",
              "fontSize": 12,
              "fontWeight": "300",
              "left": 7,
              "lineHeight": 16,
              "paddingHorizontal": 7,
              "position": "absolute",
              "top": -9,
            }
          }
        >
          Screen Timeout
        </Text>
      </View>
    </View>
  </RCTScrollView>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      [
        {
          "opacity": 1,
        },
        [
          {
            "elevation": 12,
            "shadowColor": "rgba(0, 0, 0, 1)",
            "shadowOffset": {
              "height": 4,
              "width": 4,
            },
            "shadowOpacity": 0.2,
            "shadowRadius": 12,
          },
          {
            "marginHorizontal": 24,
            "marginVertical": 16,
          },
        ],
      ]
    }
  >
    <View
      style={
        {
          "borderRadius": 24,
          "overflow": "hidden",
        }
      }
    >
      <RNSVGSvgView
        bbHeight="48"
        bbWidth="100%"
        focusable={false}
        height={48}
        style={
          [
            {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            {
              "flex": 0,
              "height": 48,
              "width": "100%",
            },
          ]
        }
        width="100%"
      >
        <RNSVGGroup
          fill={
            {
              "payload": 4278190080,
              "type": 0,
            }
          }
        >
          <RNSVGDefs>
            <RNSVGLinearGradient
              gradient={
                [
                  0,
                  -13224394,
                  1,
                  1776411,
                ]
              }
              gradientTransform={null}
              gradientUnits={0}
              name="grad"
              x1="0"
              x2="0"
              y1="0"
              y2="0.5"
            />
          </RNSVGDefs>
          <RNSVGRect
            fill={
              {
                "brushRef": "grad",
                "type": 1,
              }
            }
            height="48"
            propList={
              [
                "fill",
              ]
            }
            width="100%"
            x="0"
            y="0"
          />
          <View
            style={
              [
                {
                  "borderRadius": 24,
                  "marginHorizontal": 1,
                  "marginTop": 1,
                },
                {
                  "backgroundColor": "rgba(191, 210, 43, 1)",
                  "height": 46,
                },
              ]
            }
          >
            <View
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingVertical": 12,
                  },
                  undefined,
                ]
              }
            >
              <View
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
              >
                <Text
                  style={
                    [
                      {
                        "color": "rgba(255, 255, 255, 1)",
                        "fontFamily": "Roboto-Medium",
                        "fontSize": 14,
                        "fontWeight": "700",
                        "lineHeight": 20,
                        "textTransform": "uppercase",
                      },
                      {
                        "color": "rgba(27, 27, 27, 1)",
                      },
                      undefined,
                    ]
                  }
                >
                  SAVE
                </Text>
              </View>
            </View>
          </View>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
  </View>
</View>
`;
