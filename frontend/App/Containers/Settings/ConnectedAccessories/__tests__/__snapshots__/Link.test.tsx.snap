// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Link renders screen 1`] = `
<View
  style={
    {
      "backgroundColor": "rgba(27, 27, 27, 1)",
      "flex": 1,
    }
  }
>
  <View
    style={
      [
        {
          "backgroundColor": "rgba(27, 27, 27, 1)",
          "borderBottomLeftRadius": 24,
          "borderBottomRightRadius": 24,
          "elevation": 12,
          "shadowColor": "rgba(0, 0, 0, 1)",
          "shadowOffset": {
            "height": 4,
            "width": 4,
          },
          "shadowOpacity": 0.2,
          "shadowRadius": 12,
          "zIndex": 1,
        },
        {
          "paddingTop": 0,
        },
      ]
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "flexDirection": "row",
          "height": 60,
          "justifyContent": "center",
          "marginHorizontal": 24,
        }
      }
    >
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={20}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          [
            {
              "opacity": 1,
            },
            {
              "left": 0,
              "padding": 10,
              "position": "absolute",
            },
          ]
        }
      >
        <SvgMock />
      </View>
      <View
        style={
          {
            "alignItems": "center",
            "marginHorizontal": 48,
          }
        }
      >
        <Text
          numberOfLines={1}
          style={
            {
              "color": "rgba(255, 255, 255, 1)",
              "fontFamily": "RobotoCondensed-Medium",
              "fontSize": 20,
              "fontWeight": "500",
              "lineHeight": 32,
            }
          }
        >
          Link
        </Text>
      </View>
    </View>
  </View>
  <View
    style={
      {
        "flex": 1,
        "paddingHorizontal": 24,
        "paddingVertical": 16,
      }
    }
  >
    <View
      style={
        [
          {
            "paddingHorizontal": 12,
            "paddingVertical": 15,
          },
          {
            "marginTop": 12,
          },
        ]
      }
    >
      <View
        style={
          [
            {
              "flexDirection": "row",
              "justifyContent": "space-between",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            [
              {
                "marginLeft": 8,
              },
              undefined,
            ]
          }
        >
          <Text
            style={
              {
                "color": "rgba(255, 255, 255, 1)",
                "fontFamily": "Roboto-Medium",
                "fontSize": 14,
                "fontWeight": "500",
                "lineHeight": 20,
                "marginRight": 7,
                "marginTop": 4,
              }
            }
          >
            LINK
          </Text>
        </View>
        <View
          style={
            [
              {
                "flex": 1,
                "justifyContent": "center",
              },
              {
                "marginLeft": 10,
              },
            ]
          }
        >
          <Text
            ellipsizeMode="tail"
            numberOfLines={1}
            style={
              [
                {
                  "color": "rgba(255, 255, 255, 0.87)",
                  "fontFamily": "Roboto-Medium",
                  "fontSize": 16,
                  "fontWeight": "400",
                  "lineHeight": 24,
                  "maxWidth": 210,
                },
                undefined,
              ]
            }
          >
            Link
          </Text>
          <Text
            ellipsizeMode="tail"
            style={
              [
                {
                  "color": "rgba(147, 147, 147, 1)",
                  "fontFamily": "Roboto-Medium",
                  "fontSize": 14,
                  "fontWeight": "400",
                  "lineHeight": 20,
                },
                undefined,
                undefined,
              ]
            }
          >
            The LINK connection is shown when a Link is detected on the expansion port.
          </Text>
        </View>
        <View
          style={
            [
              {
                "alignItems": "center",
                "flexDirection": "row",
              },
              {
                "alignItems": "flex-start",
              },
            ]
          }
        />
      </View>
    </View>
    <View
      style={
        {
          "backgroundColor": "rgba(27, 27, 27, 1)",
          "borderRadius": 24,
          "elevation": 12,
          "flexDirection": "row",
          "justifyContent": "space-between",
          "marginVertical": 12,
          "shadowColor": "rgba(0, 0, 0, 1)",
          "shadowOffset": {
            "height": 4,
            "width": 4,
          },
          "shadowOpacity": 0.2,
          "shadowRadius": 12,
        }
      }
    >
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          [
            {
              "opacity": 1,
            },
            [
              {
                "alignItems": "center",
                "borderRadius": 24,
                "color": "rgba(191, 210, 43, 1)",
                "height": 48,
                "justifyContent": "center",
                "width": "50%",
              },
              {
                "backgroundColor": "rgba(191, 210, 43, 1)",
              },
            ],
          ]
        }
      >
        <Text
          style={
            [
              {
                "color": "rgba(255, 255, 255, 1)",
                "fontFamily": "Roboto-Medium",
                "fontSize": 14,
                "fontWeight": "700",
                "lineHeight": 20,
                "textTransform": "uppercase",
              },
              {
                "color": "rgba(0, 0, 0, 1)",
              },
            ]
          }
        >
          Tank Mode
        </Text>
      </View>
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          [
            {
              "opacity": 1,
            },
            [
              {
                "alignItems": "center",
                "borderRadius": 24,
                "color": "rgba(191, 210, 43, 1)",
                "height": 48,
                "justifyContent": "center",
                "width": "50%",
              },
              {
                "backgroundColor": "rgba(27, 27, 27, 1)",
              },
            ],
          ]
        }
      >
        <Text
          style={
            [
              {
                "color": "rgba(255, 255, 255, 1)",
                "fontFamily": "Roboto-Medium",
                "fontSize": 14,
                "fontWeight": "700",
                "lineHeight": 20,
                "textTransform": "uppercase",
              },
              {
                "color": "rgba(191, 210, 43, 1)",
              },
            ]
          }
        >
          Car Mode
        </Text>
      </View>
    </View>
    <View
      style={
        [
          {
            "paddingHorizontal": 12,
            "paddingVertical": 15,
          },
          undefined,
        ]
      }
    >
      <View
        style={
          [
            {
              "flexDirection": "row",
              "justifyContent": "space-between",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            [
              {
                "flex": 1,
                "justifyContent": "center",
              },
              undefined,
            ]
          }
        >
          <Text
            ellipsizeMode="tail"
            numberOfLines={1}
            style={
              [
                {
                  "color": "rgba(255, 255, 255, 0.87)",
                  "fontFamily": "Roboto-Medium",
                  "fontSize": 16,
                  "fontWeight": "400",
                  "lineHeight": 24,
                  "maxWidth": 210,
                },
                undefined,
              ]
            }
          >
            Firmware Version
          </Text>
          <Text
            ellipsizeMode="tail"
            numberOfLines={1}
            style={
              [
                {
                  "color": "rgba(147, 147, 147, 1)",
                  "fontFamily": "Roboto-Medium",
                  "fontSize": 14,
                  "fontWeight": "400",
                  "lineHeight": 20,
                },
                undefined,
                undefined,
              ]
            }
          >
            Updated by Yeti.
          </Text>
        </View>
        <View
          style={
            [
              {
                "alignItems": "center",
                "flexDirection": "row",
              },
              {
                "alignItems": "flex-start",
              },
            ]
          }
        >
          <View
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              [
                {
                  "opacity": 1,
                },
                undefined,
              ]
            }
          >
            <Text
              ellipsizeMode="clip"
              numberOfLines={1}
              style={
                [
                  {
                    "color": "rgba(255, 255, 255, 0.87)",
                    "fontFamily": "Roboto-Medium",
                    "fontSize": 16,
                    "fontWeight": "400",
                    "lineHeight": 24,
                    "maxWidth": 210,
                  },
                  undefined,
                ]
              }
            >
              Version 0
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": true,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      [
        {
          "opacity": 1,
        },
        [
          {
            "elevation": 12,
            "shadowColor": "rgba(0, 0, 0, 1)",
            "shadowOffset": {
              "height": 4,
              "width": 4,
            },
            "shadowOpacity": 0.2,
            "shadowRadius": 12,
          },
          {
            "margin": 24,
          },
        ],
      ]
    }
  >
    <View
      style={
        {
          "borderRadius": 24,
          "overflow": "hidden",
        }
      }
    >
      <RNSVGSvgView
        bbHeight="48"
        bbWidth="100%"
        focusable={false}
        height={48}
        style={
          [
            {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            {
              "flex": 0,
              "height": 48,
              "width": "100%",
            },
          ]
        }
        width="100%"
      >
        <RNSVGGroup
          fill={
            {
              "payload": 4278190080,
              "type": 0,
            }
          }
        >
          <RNSVGDefs>
            <RNSVGLinearGradient
              gradient={
                [
                  0,
                  -13224394,
                  1,
                  1776411,
                ]
              }
              gradientTransform={null}
              gradientUnits={0}
              name="grad"
              x1="0"
              x2="0"
              y1="0"
              y2="0.5"
            />
          </RNSVGDefs>
          <RNSVGRect
            fill={
              {
                "brushRef": "grad",
                "type": 1,
              }
            }
            height="48"
            propList={
              [
                "fill",
              ]
            }
            width="100%"
            x="0"
            y="0"
          />
          <View
            style={
              [
                {
                  "borderRadius": 24,
                  "marginHorizontal": 1,
                  "marginTop": 1,
                },
                {
                  "backgroundColor": "rgba(27, 27, 27, 1)",
                  "height": 46,
                },
              ]
            }
          >
            <View
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingVertical": 12,
                  },
                  undefined,
                ]
              }
            >
              <View
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
              >
                <Text
                  style={
                    [
                      {
                        "color": "rgba(255, 255, 255, 1)",
                        "fontFamily": "Roboto-Medium",
                        "fontSize": 14,
                        "fontWeight": "700",
                        "lineHeight": 20,
                        "textTransform": "uppercase",
                      },
                      {
                        "color": "rgba(255, 255, 255, 0.38)",
                      },
                      undefined,
                    ]
                  }
                >
                  SAVE
                </Text>
              </View>
            </View>
          </View>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
  </View>
</View>
`;
