// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FileLogger renders screen 1`] = `
<View
  style={
    {
      "backgroundColor": "rgba(27, 27, 27, 1)",
      "flex": 1,
    }
  }
>
  <View
    style={
      [
        {
          "backgroundColor": "rgba(27, 27, 27, 1)",
          "borderBottomLeftRadius": 24,
          "borderBottomRightRadius": 24,
          "elevation": 12,
          "shadowColor": "rgba(0, 0, 0, 1)",
          "shadowOffset": {
            "height": 4,
            "width": 4,
          },
          "shadowOpacity": 0.2,
          "shadowRadius": 12,
          "zIndex": 1,
        },
        {
          "paddingTop": 0,
        },
      ]
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "flexDirection": "row",
          "height": 60,
          "justifyContent": "center",
          "marginHorizontal": 24,
        }
      }
    >
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={20}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          [
            {
              "opacity": 1,
            },
            {
              "left": 0,
              "padding": 10,
              "position": "absolute",
            },
          ]
        }
      >
        <SvgMock />
      </View>
      <View
        style={
          {
            "alignItems": "center",
            "marginHorizontal": 48,
          }
        }
      >
        <Text
          numberOfLines={1}
          style={
            {
              "color": "rgba(255, 255, 255, 1)",
              "fontFamily": "RobotoCondensed-Medium",
              "fontSize": 20,
              "fontWeight": "500",
              "lineHeight": 32,
            }
          }
        >
          Logger Files
        </Text>
      </View>
    </View>
  </View>
  <RCTScrollView
    ListEmptyComponent={[Function]}
    data={[]}
    getItem={[Function]}
    getItemCount={[Function]}
    keyExtractor={[Function]}
    onContentSizeChange={[Function]}
    onLayout={[Function]}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={0.0001}
    stickyHeaderIndices={[]}
    style={
      {
        "paddingHorizontal": 24,
        "paddingVertical": 16,
      }
    }
    viewabilityConfigCallbackPairs={[]}
  >
    <View>
      <View
        style={
          {
            "alignItems": "center",
            "flex": 1,
            "justifyContent": "center",
            "marginTop": 64,
          }
        }
      >
        <Text
          style={
            {
              "color": "rgba(255, 255, 255, 1)",
              "fontFamily": "RobotoCondensed-Medium",
              "fontSize": 20,
              "fontWeight": "500",
              "lineHeight": 32,
            }
          }
        >
          No files found
        </Text>
      </View>
    </View>
  </RCTScrollView>
  <View
    style={
      {
        "borderTopColor": "rgba(54, 54, 54, 1)",
        "borderTopWidth": 1,
        "flexDirection": "row",
        "marginBottom": 16,
      }
    }
  >
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": true,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        [
          {
            "opacity": 1,
          },
          {
            "alignItems": "center",
            "flex": 1,
            "justifyContent": "center",
            "padding": 16,
          },
        ]
      }
      testID="deleteFile"
    >
      <Text
        style={
          [
            {
              "color": "rgba(255, 255, 255, 1)",
              "fontFamily": "Roboto-Medium",
              "fontSize": 16,
              "fontWeight": "400",
              "lineHeight": 24,
            },
            {
              "opacity": 0.5,
            },
          ]
        }
      >
        Delete
      </Text>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": true,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        [
          {
            "opacity": 1,
          },
          [
            {
              "alignItems": "center",
              "flex": 1,
              "justifyContent": "center",
              "padding": 16,
            },
            {
              "opacity": 0.5,
            },
          ],
        ]
      }
      testID="deleteAllFiles"
    >
      <Text
        style={
          {
            "color": "rgba(255, 255, 255, 1)",
            "fontFamily": "Roboto-Medium",
            "fontSize": 16,
            "fontWeight": "400",
            "lineHeight": 24,
          }
        }
      >
        Delete All
      </Text>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": true,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        [
          {
            "opacity": 1,
          },
          {
            "alignItems": "center",
            "flex": 1,
            "justifyContent": "center",
            "padding": 16,
          },
        ]
      }
      testID="shareBtn"
    >
      <Text
        style={
          [
            {
              "color": "rgba(255, 255, 255, 1)",
              "fontFamily": "Roboto-Medium",
              "fontSize": 16,
              "fontWeight": "400",
              "lineHeight": 24,
            },
            {
              "opacity": 0.5,
            },
          ]
        }
      >
        Share
      </Text>
    </View>
  </View>
</View>
`;
