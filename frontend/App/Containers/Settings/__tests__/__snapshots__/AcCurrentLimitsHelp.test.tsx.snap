// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AcCurrentLimitsHelp renders screen 1`] = `
<View
  style={
    {
      "backgroundColor": "rgba(27, 27, 27, 1)",
      "flex": 1,
    }
  }
>
  <View
    style={
      [
        {
          "backgroundColor": "rgba(27, 27, 27, 1)",
          "borderBottomLeftRadius": 24,
          "borderBottomRightRadius": 24,
          "elevation": 12,
          "shadowColor": "rgba(0, 0, 0, 1)",
          "shadowOffset": {
            "height": 4,
            "width": 4,
          },
          "shadowOpacity": 0.2,
          "shadowRadius": 12,
          "zIndex": 1,
        },
        {
          "paddingTop": 0,
        },
      ]
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "flexDirection": "row",
          "height": 60,
          "justifyContent": "center",
          "marginHorizontal": 24,
        }
      }
    >
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={20}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          [
            {
              "opacity": 1,
            },
            {
              "left": 0,
              "padding": 10,
              "position": "absolute",
            },
          ]
        }
      >
        <SvgMock />
      </View>
      <View
        style={
          {
            "alignItems": "center",
            "marginHorizontal": 48,
          }
        }
      >
        <Text
          numberOfLines={1}
          style={
            {
              "color": "rgba(255, 255, 255, 1)",
              "fontFamily": "RobotoCondensed-Medium",
              "fontSize": 20,
              "fontWeight": "500",
              "lineHeight": 32,
            }
          }
        >
          Help
        </Text>
        <Text
          style={
            {
              "color": "rgba(255, 255, 255, 0.87)",
              "fontFamily": "Roboto-Medium",
              "fontSize": 12,
              "fontWeight": "300",
              "lineHeight": 16,
            }
          }
        >
          APS Mode & AC Current Limits
        </Text>
      </View>
    </View>
  </View>
  <RCTScrollView
    style={
      {
        "padding": 16,
      }
    }
  >
    <View>
      <View
        style={
          [
            {
              "borderColor": "rgba(54, 54, 54, 1)",
              "borderRadius": 8,
              "borderWidth": 1,
              "marginVertical": 12,
              "paddingBottom": 6,
              "paddingHorizontal": 8,
              "paddingTop": 12,
              "position": "relative",
            },
            undefined,
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
              "marginBottom": 10,
            }
          }
        >
          <SvgMock />
          <Text
            style={
              {
                "color": "rgba(255, 255, 255, 0.7)",
                "flex": 1,
                "fontFamily": "Roboto-Medium",
                "fontSize": 12,
                "fontWeight": "300",
                "lineHeight": 16,
                "marginHorizontal": 16,
              }
            }
          >
            <Text>
              Out of the box, the Yeti’s AC Limit Setting is set to LOW. This ensures that when first plugged into charge, the Yeti is less likely to overload the circuit it’s plugged in to.
            </Text>
          </Text>
        </View>
        <Image
          source={
            {
              "testUri": "../../../App/Images/InverterController/AcLimits1.png",
            }
          }
          style={
            {
              "resizeMode": "contain",
              "width": "100%",
            }
          }
        />
      </View>
      <View
        style={
          [
            {
              "borderColor": "rgba(54, 54, 54, 1)",
              "borderRadius": 8,
              "borderWidth": 1,
              "marginVertical": 12,
              "paddingBottom": 6,
              "paddingHorizontal": 8,
              "paddingTop": 12,
              "position": "relative",
            },
            undefined,
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
              "marginBottom": 10,
            }
          }
        >
          <SvgMock />
          <Text
            style={
              {
                "color": "rgba(255, 255, 255, 0.7)",
                "flex": 1,
                "fontFamily": "Roboto-Medium",
                "fontSize": 12,
                "fontWeight": "300",
                "lineHeight": 16,
                "marginHorizontal": 16,
              }
            }
          >
            <Text>
              When an AC output load draws 
              <Text
                style={
                  {
                    "color": "rgba(191, 210, 43, 1)",
                  }
                }
              >
                LESS
              </Text>
               power than the configured
               
              <Text
                style={
                  {
                    "color": "rgba(191, 210, 43, 1)",
                  }
                }
              >
                AC Input Limit
              </Text>
              , the Yeti will operate in
               
              <Text
                style={
                  {
                    "fontStyle": "italic",
                    "fontWeight": "700",
                  }
                }
              >
                APS
              </Text>
               mode. In 
              <Text
                style={
                  {
                    "fontStyle": "italic",
                    "fontWeight": "700",
                  }
                }
              >
                APS
              </Text>
               mode, the Yeti will pass AC power directly from the AC inputs to the AC outputs. This is more energy efficient and reduces wear on the Yeti’s battery.
            </Text>
          </Text>
        </View>
        <Image
          source={
            {
              "testUri": "../../../App/Images/InverterController/AcLimits2.png",
            }
          }
          style={
            {
              "resizeMode": "contain",
              "width": "100%",
            }
          }
        />
      </View>
      <View
        style={
          [
            {
              "borderColor": "rgba(54, 54, 54, 1)",
              "borderRadius": 8,
              "borderWidth": 1,
              "marginVertical": 12,
              "paddingBottom": 6,
              "paddingHorizontal": 8,
              "paddingTop": 12,
              "position": "relative",
            },
            undefined,
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
              "marginBottom": 10,
            }
          }
        >
          <SvgMock />
          <Text
            style={
              {
                "color": "rgba(255, 255, 255, 0.7)",
                "flex": 1,
                "fontFamily": "Roboto-Medium",
                "fontSize": 12,
                "fontWeight": "300",
                "lineHeight": 16,
                "marginHorizontal": 16,
              }
            }
          >
            <Text>
              When the Yeti’s AC output load draws 
              <Text
                style={
                  {
                    "color": "rgba(255, 83, 29, 1)",
                  }
                }
              >
                MORE
              </Text>
               power than the configured
               
              <Text
                style={
                  {
                    "color": "rgba(191, 210, 43, 1)",
                  }
                }
              >
                AC Input Limit
              </Text>
              , the Yeti will disable
               
              <Text
                style={
                  {
                    "fontStyle": "italic",
                    "fontWeight": "700",
                  }
                }
              >
                APS
              </Text>
               mode and start using the battery to power the AC device.
            </Text>
          </Text>
        </View>
        <Image
          source={
            {
              "testUri": "../../../App/Images/InverterController/AcLimits3.png",
            }
          }
          style={
            {
              "resizeMode": "contain",
              "width": "100%",
            }
          }
        />
      </View>
      <View
        style={
          [
            {
              "borderColor": "rgba(54, 54, 54, 1)",
              "borderRadius": 8,
              "borderWidth": 1,
              "marginVertical": 12,
              "paddingBottom": 6,
              "paddingHorizontal": 8,
              "paddingTop": 12,
              "position": "relative",
            },
            undefined,
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
              "marginBottom": 10,
            }
          }
        >
          <SvgMock />
          <Text
            style={
              {
                "color": "rgba(255, 255, 255, 0.7)",
                "flex": 1,
                "fontFamily": "Roboto-Medium",
                "fontSize": 12,
                "fontWeight": "300",
                "lineHeight": 16,
                "marginHorizontal": 16,
              }
            }
          >
            <Text>
              The 
              <Text
                style={
                  {
                    "color": "rgba(191, 210, 43, 1)",
                  }
                }
              >
                AC Charge Limit
              </Text>
               is a configurable setting that limits the current from the AC input ports into the 
              <Text
                style={
                  {
                    "color": "rgba(191, 210, 43, 1)",
                  }
                }
              >
                Battery
              </Text>
              . When the AC output load draws 
              <Text
                style={
                  {
                    "color": "rgba(191, 210, 43, 1)",
                  }
                }
              >
                LESS
              </Text>
               than the difference of the
               
              <Text
                style={
                  {
                    "color": "rgba(191, 210, 43, 1)",
                  }
                }
              >
                AC Input Limit
              </Text>
               minus the
               
              <Text
                style={
                  {
                    "color": "rgba(191, 210, 43, 1)",
                  }
                }
              >
                AC Charge Limit
              </Text>
              , the
               
              <Text
                style={
                  {
                    "color": "rgba(191, 210, 43, 1)",
                  }
                }
              >
                Battery
              </Text>
               can charge up to the configured
               
              <Text
                style={
                  {
                    "color": "rgba(191, 210, 43, 1)",
                  }
                }
              >
                AC Charge Limit
              </Text>
              .
            </Text>
          </Text>
        </View>
        <Image
          source={
            {
              "testUri": "../../../App/Images/InverterController/AcLimits4.png",
            }
          }
          style={
            {
              "resizeMode": "contain",
              "width": "100%",
            }
          }
        />
      </View>
      <View
        style={
          [
            {
              "borderColor": "rgba(54, 54, 54, 1)",
              "borderRadius": 8,
              "borderWidth": 1,
              "marginVertical": 12,
              "paddingBottom": 6,
              "paddingHorizontal": 8,
              "paddingTop": 12,
              "position": "relative",
            },
            undefined,
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
              "marginBottom": 10,
            }
          }
        >
          <SvgMock />
          <Text
            style={
              {
                "color": "rgba(255, 255, 255, 0.7)",
                "flex": 1,
                "fontFamily": "Roboto-Medium",
                "fontSize": 12,
                "fontWeight": "300",
                "lineHeight": 16,
                "marginHorizontal": 16,
              }
            }
          >
            <Text>
              When the AC output load is 
              <Text
                style={
                  {
                    "color": "rgba(255, 83, 29, 1)",
                  }
                }
              >
                MORE
              </Text>
               than the difference of the
               
              <Text
                style={
                  {
                    "color": "rgba(191, 210, 43, 1)",
                  }
                }
              >
                AC Input Limit
              </Text>
               minus the
               
              <Text
                style={
                  {
                    "color": "rgba(191, 210, 43, 1)",
                  }
                }
              >
                AC Charge Limit
              </Text>
              , the Yeti will stay in
               
              <Text
                style={
                  {
                    "fontStyle": "italic",
                    "fontWeight": "700",
                  }
                }
              >
                APS
              </Text>
               mode, powering the load from the AC power source and may continue to charge the 
              <Text
                style={
                  {
                    "color": "rgba(191, 210, 43, 1)",
                  }
                }
              >
                Battery
              </Text>
               using the remainder* of the
               
              <Text
                style={
                  {
                    "color": "rgba(191, 210, 43, 1)",
                  }
                }
              >
                AC Input Limit
              </Text>
               minus the AC output load.
              <Text
                style={
                  {
                    "color": "rgba(133, 133, 133, 1)",
                    "fontFamily": "Roboto-Medium",
                    "fontSize": 10,
                    "fontWeight": "300",
                    "lineHeight": 16,
                  }
                }
              >
                


                *If the remainder current is lower than the minimum charge limit, no charging will occur.
              </Text>
            </Text>
          </Text>
        </View>
        <Image
          source={
            {
              "testUri": "../../../App/Images/InverterController/AcLimits5.png",
            }
          }
          style={
            {
              "resizeMode": "contain",
              "width": "100%",
            }
          }
        />
      </View>
      <View
        style={
          {
            "height": 32,
          }
        }
      />
    </View>
  </RCTScrollView>
</View>
`;
